@using MvcClient.Models
@model TweetsViewModel

@{
    ViewBag.Title = "Display Tweets";
}

<div class="row">
    <div class="col-sm-6">
        <div class="leftside">
            Get Tweets!
        </div>
    </div>
    <div class="col-sm-3">
        <button id="btnGo" class="btn-lg" onclick="GetTweetsNow()">
            Go
        </button>
    </div>
    <div class="col-sm-3">
        <div id="GetTime"></div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <div class="buffer"></div>
    </div>
</div>

<div class="row">
    <div class="col-sm-1">
    </div>

    <div class="col-sm-10">
        <div id="RenderGrid">
        </div>
    </div>

    <div class="col-sm-1">
    </div>
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            //$("#GetTime").load('(Url.Action("GetTimeNow","Home",null, Request.Url.Scheme))'); call to MVC app controller

            $.ajax({
                type: 'GET',
                url: 'http://localhost:3270/api/Tweets/GetTimeNow',
                datatype: 'json',
                success: function (data) {
                    $('#GetTime').append(data);
                }
            });

            //fetch('http://localhost:3270/api/Tweets/GetTimeNow')
            //    .then(res => )
        });

        function GetTweetsNow() {
            $("#RenderGrid").load('@(Url.Action("GetTweets","Home",null, Request.Url.Scheme))'); //call to MVC app controller, instantiates view model
                                                                                                 //which then calls API w/ HttpClient
        }
    </script>
}